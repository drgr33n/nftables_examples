#!/usr/bin/nft -f
# Libvirt NAT with counter by Zarren Spry <zarrenspry@gmail.com>

flush ruleset

define libvirt_target_net_ipv4 = 192.168.122.0/24
define libvirt_target_nic_bridge = virbr0

table inet filter {
	set prv_ipv4 {
		type ipv4_addr;
		flags interval;
		elements = { 10.0.0.0/8, 192.168.0.0/16 }
	}
	chain input {
		type filter hook input priority filter; policy drop;
		ct state { established, related } accept
		ct state invalid drop
		iifname "lo" accept
		ip protocol icmp accept
		ip6 nexthdr ipv6-icmp accept
		iifname $libvirt_target_nic_bridge counter jump libvirt_inp
	}
	chain forward {
		type filter hook forward priority filter; policy drop;
		iifname $libvirt_target_nic_bridge oifname $libvirt_target_nic_bridge counter jump libvirt_fwx
		oifname $libvirt_target_nic_bridge counter jump libvirt_fwi
		iifname $libvirt_target_nic_bridge counter jump libvirt_fwd
	}
	chain output {
		type filter hook output priority filter; policy accept;
        	iifname $libvirt_target_nic_bridge counter jump libvirt_out
	}
	chain libvirt_inp {
 		tcp dport domain accept
		udp dport domain accept
		tcp dport bootps accept
		udp dport bootps accept
	}
        chain libvirt_fwi {
		ip daddr $libvirt_target_net_ipv4 ct state established,related accept
        }
        chain libvirt_fwd {
		ip saddr $libvirt_target_net_ipv4 accept
        }
        chain libvirt_fwx {
		accept
        }
        chain libvirt_out {
		udp dport domain accept
		tcp dport domain accept
		udp dport bootpc accept
		tcp dport bootpc accept
        }
}

table ip nat {
	chain prerouting {
		type nat hook prerouting priority filter; policy accept;
	}
	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		iifname $libvirt_target_nic_bridge oifname $libvirt_target_nic_bridge counter jump libvirt_prt
                ip saddr $libvirt_target_net_ipv4 ip daddr != $libvirt_target_net_ipv4 masquerade
	}
        chain libvirt_prt {
		ip saddr $libvirt_target_net_ipv4 ip daddr 224.0.0.0/24 return
		ip saddr $libvirt_target_net_ipv4 ip daddr 255.255.255.255 return
		ip protocol tcp ip saddr $libvirt_target_net_ipv4 ip daddr != $libvirt_target_net_ipv4 masquerade #to :1024-65535
		ip protocol udp ip saddr $libvirt_target_net_ipv4 ip daddr != $libvirt_target_net_ipv4 masquerade #to :1024-65535
		ip saddr $libvirt_target_net_ipv4 ip daddr != $libvirt_target_net_ipv4 masquerade
	}
	chain output {
        	type nat hook output priority filter; policy accept;
	}
}

table ip mangle {
	chain prerouting {
		type filter hook prerouting priority mangle; policy accept;
	}
	chain input {
		type filter hook input priority mangle; policy accept;
	}
	chain forward {
		type filter hook forward priority mangle; policy accept;
	}
	chain output {
		type route hook output priority mangle; policy accept;
	}
	chain postrouting {
		type filter hook postrouting priority mangle; policy accept;
		iifname $libvirt_target_nic_bridge oifname $libvirt_target_nic_bridge counter jump libvirt_prt
	}
        chain libvirt_prt {
	}
}

table bridge filter {
	chain input {
		type filter hook input priority filter; policy accept;
	}
	chain forward {
		type filter hook forward priority filter; policy drop;
	}
	chain output {
		type filter hook input priority filter; policy accept;
	}
}
